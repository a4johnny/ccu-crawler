    @model IEnumerable<CCU_Crawler.Models.Guestbook>

    @{
        ViewBag.Title = "List";
    }

    <h2>List</h2>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <br>
        課程名稱 : @TempData["name"]
        <br>
        指導教剩 : @TempData["teacher"]
        <br>
        課程註解 : @TempData["remark"]
        <br>
    </div>
     }
<p>
    @Html.ActionLink("我要評論", "Conplain")
</p>
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Score)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Content)
            </th>
        </tr>

        @foreach (var item in Model)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Score)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Content)
            </td>
         </tr>
        }
    </table>

        @*<div class="form-horizontal">
                <h4>Guestbook</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)

                <div class="form-group">
                    @Html.LabelFor(model => model.Score, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Score, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Score, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>*@

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
