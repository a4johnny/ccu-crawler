@model IEnumerable<CCU_Crawler.Models.Guestbook>
@using CCU_Crawler.Models;

@functions{
    //ViewBag.Title = "List";
    private ApplicationDbContext db = new ApplicationDbContext();
}

<h1><b>課程資訊</b></h1>
@*@Styles.Render("~/Content/css")*@  @*layout裡有寫就可以了*@

@if (TempData["warning"] != null)
{
    <script type="text/javascript">
        var warning = @Html.Raw(Json.Encode(TempData["warning"])); //把tempdata的字串轉成json js只認json
        alert(warning);
    </script>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @section head
{
        <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.6.0/Chart.min.js" type="text/javascript"></script>
        <script src="https://code.jquery.com/jquery-1.11.3.min.js"></script>
        <div style="position:relative; left: 30% ; width: 40%; height: 40%;">
            <canvas id="myChart_bar" width="400" height="300"></canvas> @*可以調大小*@
            <canvas id="myChart_pie" width="400" height="300"></canvas>
        </div>

        <div style="position:relative; left: 30% ; width: 40%; height: 40%;">
            <canvas id="myChart_bar2" width="400" height="300"></canvas> @*可以調大小*@
            <canvas id="myChart_bar3" width="400" height="300"></canvas>
        </div>
        <script>


            @{
                var vote0 = 0;
                var vote1 = 0;
                var vote2 = 0;
                var vote3 = 0;
                var vote4 = 0;
                var vote5 = 0;

                foreach (var model in Model)
                {
                    switch (model.Score)
                    {
                        case 1:
                            vote1++;
                            break;
                        case 2:
                            vote2++;
                            break;
                        case 3:
                            vote3++;
                            break;
                        case 4:
                            vote4++;
                            break;
                        case 5:
                            vote5++;
                            break;
                    }
                }
}

            var ctx = document.getElementById('myChart_bar').getContext('2d');
            function getRandom(x) {
                return Math.floor(Math.random() * x);
            };
                        var myChart_bar = new Chart(ctx, {
                type: 'bar',
                data: {
                        labels: ['1分', '2分', '3分', '4分', '5分'],
                    datasets: [{
                            label: '評分人數',
                        data: [@vote1, @vote2, @vote3, @vote4, @vote5],
                        backgroundColor: [
                            'rgba(205, 135, 135, 0.4)',
                            'rgba(23, 89, 111, 0.4)',
                            'rgba(242, 214, 161, 0.4)',
                            'rgba(167, 198, 188, 0.4)',
                            'rgba(232, 166, 144, 0.4)'
                        ],
                        borderColor: [
                            'rgba(205, 135, 135, 0.6)',
                            'rgba(23, 89, 111, 0.6)',
                            'rgba(242, 214, 161, 0.6)',
                            'rgba(167, 198, 188, 0.6)',
                            'rgba(232, 166, 144, 0.6)'
                        ],
                        borderWidth: 0.5
                    }]
                },
                options: {
                        scales: {
                            yAxes: [{
                                ticks: {
                                    beginAtZero: true
                                }
                                }]
                    }
                        }
                    });

                    var ctx = document.getElementById('myChart_pie').getContext('2d');
                    var myChart_pie = new Chart(ctx, {
                type: 'doughnut',
                data: {
                    labels: ['0分', '1分', '2分', '3分', '4分', '5分'],
                    datasets: [{
                        label: '評分人數',
                        data: [@vote0, @vote1, @vote2, @vote3, @vote4, @vote5],
                        backgroundColor: [
                            'rgba(205, 135, 135, 0.4)',
                            'rgba(23, 89, 111, 0.4)',
                            'rgba(242, 214, 161, 0.4)',
                            'rgba(167, 198, 188, 0.4)',
                            'rgba(232, 166, 144, 0.4)',
                            'rgba(92, 71, 93, 0.4)'
                        ]
                    }],
                },
                options: {
                    responsive: true,
                    title: {
                        display: true,
                        text: '課程評分圓餅圖'
                    },
                    legend: {
                        position: 'bottom',
                        labels: {
                            fontColor: 'black',
                        }
                        }
                    }
                });
            @{
                float rollcall_always = 0; //時常點名
                float rollcall_often = 0; //偶爾點名
                float rollcall_none = 0; //不需點名
                float signcourse_always = 0; //無條件加簽
                float signcourse_condition = 0; //有條件加簽
                float signcourse_none = 0; //不可加簽
                float grouping_yes = 0; //需要分組
                float grouping_none = 0; //不需分組

                foreach (var model in Model)
                {
                    switch (model.Call)
                    {
                        case 1:
                            rollcall_always++;
                            break;
                        case 2:
                            rollcall_often++;
                            break;
                        case 3:
                            rollcall_none++;
                            break;
                        default:
                            break;
                    }
                }

                foreach (var model in Model)
                {
                    switch (model.Group)
                    {
                        case 1:
                            grouping_yes++;
                            break;
                        default:
                            grouping_none++;
                            break;
                    }
                }

                foreach (var model in Model)
                {
                    switch (model.Sign)
                    {
                        case 1:
                            signcourse_always++;
                            break;
                        case 2:
                            signcourse_condition++;
                            break;
                        case 3:
                            signcourse_none++;
                            break;
                        default:
                            break;
                    }
                }

                float rollcall_average = (rollcall_always+ rollcall_often*2+ rollcall_none*3) /(rollcall_always+ rollcall_often+ rollcall_none);
                float signcourse_average = (signcourse_always+ signcourse_condition*2+ signcourse_none*3) /(signcourse_always+ signcourse_condition+ signcourse_none);
                float grouping = grouping_yes / (grouping_yes + grouping_none);
}

            var ctx = document.getElementById('myChart_bar2').getContext('2d');
            function getRandom(x) {
                return Math.floor(Math.random() * x);
            };
                        var myChart_bar2 = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: ['時常點名', '偶爾點名', '不需點名', '無條件加簽', '有條件加簽', '不可加簽', '需要分組', '不需分組'],
                    datasets: [{
                            label: '評論人數',
                        data: [@rollcall_always, @rollcall_often, @rollcall_none, @signcourse_always, @signcourse_condition, @signcourse_none, @grouping_yes, @grouping_none],
                        backgroundColor: [
                            'rgba(205, 135, 135, 0.4)',
                            'rgba(23, 89, 111, 0.4)',
                            'rgba(242, 214, 161, 0.4)',
                            'rgba(167, 198, 188, 0.4)', //'rgba(74, 124, 124, 0.4)'
                            'rgba(232, 166, 144, 0.4)',
                            'rgba(92, 71, 93, 0.4)',
                            'rgba(159, 146, 122, 0.4)',
                            'rgba(128, 128, 128, 0.4)'

                        ],
                        borderColor: [
                            'rgba(205, 135, 135, 0.6)',
                            'rgba(23, 89, 111, 0.6)',
                            'rgba(242, 214, 161, 0.6)',
                            'rgba(167, 198, 188, 0.6)',
                            'rgba(232, 166, 144, 0.6)',
                            'rgba(92, 71, 93, 0.6)',
                            'rgba(159, 146, 122,0.6)',
                            'rgba(141, 141, 141, 0.6)'
                        ],
                        borderWidth: 0.5
                    }]
                },
                options: {
                        scales: {
                            yAxes: [{
                                ticks: {
                                    beginAtZero: true
                                }
                                }]
                    }
                        }
                    });
                        var ctx = document.getElementById('myChart_bar3').getContext('2d');
            function getRandom(x) {
                return Math.floor(Math.random() * x);
            };
                        var myChart_bar3 = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: ['點名 (1~3)', '加簽 (1~3)','分組 (0~1)'],
                    datasets: [{
                            label: '平均分數',
                        data: [@rollcall_average, @signcourse_average, @grouping],
                        backgroundColor: [
                            'rgba(205, 135, 135, 0.4)',
                            'rgba(232, 166, 144, 0.4)',
                            'rgba(92, 71, 93, 0.4)'
                        ],
                        borderColor: [
                            'rgba(205, 135, 135, 0.6)',
                            'rgba(232, 166, 144, 0.6)',
                            'rgba(92, 71, 93, 0.6)'
                        ],
                        borderWidth: 0.5
                    }]
                },
                options: {
                        scales: {
                            yAxes: [{
                                ticks: {
                                    beginAtZero: true
                                }
                                }]
                    }
                        }
                    });


        </script>
    }


    <table class="table table-bordered table-sm">
        <thead>
            <tr>
                <td class="col-lg-1" style="text-align: center; vertical-align: middle">
                    課程名稱 :
                </td>
                <td class="col-lg-7" style="vertical-align: middle">
                    @ViewBag.name
                </td>
            <tr>
        </thead>
        <tr>
            <td style="text-align: center; vertical-align: middle">
                指導教授 :
            </td>
            <td style="vertical-align: middle">
                @ViewBag.teacher
            </td>
        <tr>
        <tr>
            <td style="text-align: center; vertical-align: middle">
                課程註解 :
            </td>
            <td style="vertical-align: middle">
                @ViewBag.remark
            </td>
        <tr>
    </table>

    <p>
        @*css的放置位置在 content 資料夾內*@
        @*然後到app_start 找 BundleConfig.cs 把新增的 css 加入*@
        @*需要這個 @Styles.Render("~/Content/css") 不過有寫在layout上了 不必再寫一遍*@
        @Html.ActionLink("我要評論", "Conplain", new { CourseId = @TempData["id"] }, new { @class = "my-button" })
    </p>
}
@*以下顯示內容可以再改  ui不確定*@
<table class="table table-bordered table-sm">
    <tr>
        <th style="text-align: center; vertical-align: middle">
            @Html.DisplayNameFor(model => model.Score)
        </th>
        <th style="text-align: center; vertical-align: middle">
            @Html.DisplayNameFor(model => model.Content)
        </th>
        <th style="text-align: center; vertical-align: middle">
            @Html.DisplayNameFor(model => model.DateTime)
        </th>
        <th style="text-align: center; vertical-align: middle">
        </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td style="text-align: center; vertical-align: middle">
                @Html.DisplayFor(modelItem => item.Score)
            </td>
            <td style="text-align: center; vertical-align: middle">
                @Html.DisplayFor(modelItem => item.Content)
            </td>
            <td style="text-align: center; vertical-align: middle">
                @Html.DisplayFor(modelItem => item.DateTime)
            </td>

            <td style="text-align: center; vertical-align: middle">
                @using (Html.BeginForm())
                {
                    <input type="hidden" value=@TempData["id"] name="CourseId">
                    <input type="hidden" value=@item.Id name="CommentId">

                    if (db.Comments.Where(x => x.User == User.Identity.Name && x.CommentId == item.Id).FirstOrDefault() != null)
                    {
                        Comment comment = new Comment();
                        comment = db.Comments.Where(x => x.User == User.Identity.Name && x.CommentId == item.Id).FirstOrDefault();
                        if (comment.GoodOrBad == 0)
                        {
                            <input type="submit" value="讚" name="action" class="btn btn-default" /> @item.good
                            <input type="submit" value="評論Bad" name="action" class="btn btn-default" style="background-color:blanchedalmond;" /> @item.bad
                        }
                        else if (comment.GoodOrBad == 1)
                        {
                            <input type="submit" value="讚" name="action" class="btn btn-default" style="background-color:blanchedalmond;" /> @item.good
                            <input type="submit" value="評論Bad" name="action" class="btn btn-default" /> @item.bad
                        }
                    }
                    else
                    {
                        <input type="submit" value="讚" name="action" class="btn btn-default" /> @item.good
                        <input type="submit" value="評論Bad" name="action" class="btn btn-default" /> @item.bad
                    }
                }
            </td>

        </tr>
    }
</table>

<div>
    @Html.ActionLink("回到<課程檢索>", "Search", "CourseSearch")
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @*@Styles.Render("~/Content/css")*@
    <link href="~/Content/guestbooklist.css" rel="stylesheet" />
    <script src="~/Content/guestbooklist.js"></script>
}
